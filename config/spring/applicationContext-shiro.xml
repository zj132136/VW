<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

<!-- web.xml中shiro的filter对应的bean -->
<!-- Shiro 的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login.action" />
		<!-- 认证成功统一跳转到first.action，建议不配置，shiro认证成功自动到上一个请求路径 -->
		<property name="successUrl" value="/first.action"/>
		<!-- 通过unauthorizedUrl指定没有权限操作时跳转页面-->
		<property name="unauthorizedUrl" value="/refuse.jsp" />
		<!-- 自定义filter配置 -->	
	
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 对静态资源设置匿名访问 -->
				/experiment/editExperimentJson.action = anon
				/experiment/tjmJson.action = anon
				/experiment/photoJson.action = anon
				/experiment/testReport.action =anon
				/experiment/xinchai.action =anon
				<!-- 试验标准规范 -->
				/upload/testStandard/testStandard.jsp = anon
				/uploadFile/testStandard/testStandard.action = anon
				/uploadFile/testStandard/testStandardSecond.action = anon
				/uploadFile/testStandard/testStandardThird.action = anon
				
				<!-- 技术档案管理 -->
				/upload/archives/archives.jsp = anon
				/uploadFile/archives/archives.action = anon
				<!-- 试验大纲报告 -->
				/upload/testReport/testReport-android.jsp = anon
				/uploadFile/testReport/testReportlist.action = anon
				<!-- 设备计划汇总 -->
				/plan/planTree.action = anon
				<!-- 设备台账 -->
				/experiment/equipment/equipment.jsp = anon
				/experiment/equipment.action = anon
				<!-- 小仪器 -->
				/experiment/instrument/instrumentNew.jsp = anon
				/experiment/instrumentTree.action = anon
				<!-- CNAS -->
				/upload/cnas/cnasnew.jsp = anon
				/uploadFile/cnas/Cnas.action = anon
				/uploadFile/cnas/CnasSecond.action = anon
				/uploadFile/cnas/CnasThird.action = anon
				<!-- 传感器 -->
				/experiment/sensor/sensor.jsp = anon
				/experiment/sensor/sensor.action = anon
				/experiment/sensor/sensorDetail.action =anon
				
				/uploadFile/cnas/** = anon
				/dhtmlxScheduler/** =anon
				/jquery-easyui-1.4.2/** =anon
				/css/** = anon
				/font-awesome/** = anon
				/img/** = anon
				/images/** = anon
				/js/** = anon
				/styles/** = anon
				<!-- 验证码，可匿名访问 -->
				/validatecode.jsp = anon
				/druid/* = anon			
				<!-- 请求 logout.action地址，shiro去清除session-->
				/logout.action = logout
				<!--商品查询需要商品查询权限 ，取消url拦截配置，使用注解授权方式 -->
				<!-- /experiment/experiment.action = perms[experiment:experiment] -->
				<!-- /items/queryItems.action = perms[item:query]
				/items/editItems.action = perms[item:edit] -->
				<!-- 配置记住我或认证通过可以访问的地址 -->
				/index.jsp  = user
				/first.action = user
				/welcome.jsp = user
				<!-- /** = authc 所有url都必须认证通过才可以访问-->
				/** = authc
				<!-- /** = anon所有url都可以匿名访问 -->			
			</value>
		</property>
	</bean>
<!-- securityManager安全管理器 -->
<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="customRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"/>
		<!-- 注入session管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!-- 记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
<!-- realm -->
<bean id="customRealm" class="com.jili.shiro.CustomRealm">
	<!-- 将凭证匹配器设置到realm中，realm按照凭证匹配器的要求进行散列 -->
	<!-- <property name="credentialsMatcher" ref="credentialsMatcher" /> -->
</bean>


<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>
 <!-- 缓存管理器 -->
<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
  </bean>


<!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
     	<property name="sessionDAO" ref="sessionDAO"/>  
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="7200000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>
    <!-- 会话DAO -->  
  <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO"/>  
    
<!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>

</beans>