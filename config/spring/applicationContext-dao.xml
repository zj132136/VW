<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据库连接池 -->
	<bean id="dataSourceMysql1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize" value="${ds.initialSize}"/>  
        <property name="minIdle" value="${ds.minIdle}"/>  
        <property name="maxActive" value="${ds.maxActive}"/>  
  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait" value="${ds.maxWait}"/>  
  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>  
  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>  
		<property name="validationQuery" value="SELECT 'x'"/>  
        <property name="testWhileIdle" value="true"/>  
        <property name="testOnBorrow" value="false"/>  
        <property name="testOnReturn" value="false"/>  
  
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
        <property name="poolPreparedStatements" value="false"/>  
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>  
  
        <!-- 配置监控统计拦截的filters -->  
        <property name="filters" value="stat"/>
	</bean>
	<bean id="dataSourceMysql2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${mysql.driver}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
	</bean>
	<bean id="dataSourceMysql3" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${sql.driver}" />
		<property name="url" value="${sql.url}" />
		<property name="username" value="${sql.username}" />
		<property name="password" value="${sql.password}" />
	</bean>
	
	<bean id="dataSource" class="com.jili.basedata.DataSources">  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <entry value-ref="dataSourceMysql1" key="MYSQL01"></entry>  
                <entry value-ref="dataSourceMysql2" key="MYSQL02"></entry>  
                <entry value-ref="dataSourceMysql3" key="MYSQL03"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSourceMysql1"></property>  
    </bean>

	<!-- SqlsessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
	</bean>
	
	
	<!-- 
	MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象，
	自动创建到spring容器中，bean的id是mapper的类名（首字母小写）
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置扫描包的路径
		如果要扫描多个包，中间使用半角逗号分隔
		要求mapper.xml和mapper.java同名且在同一个目录 
		 -->
		<property name="basePackage" value="com.jili.user.mapper,
		com.jili.plan.mapper,
		com.jili.log.mapper,
		com.jili.experiment.trouble.mapper,
		com.jili.experiment.instrument.mapper,
		com.jili.experiment.facility.mapper,
		com.jili.experiment.calibration.mapper,
		com.jili.experiment.equipment.mapper,
		com.jili.maintain.mapper,
		com.jili.experiment.experiment.mapper,
		com.jili.run.mapper,
		com.jili.upload.testReport.mapper,
		com.jili.upload.testSummarize.mapper,
		com.jili.test.mapper,
		com.jili.upload.archives.mapper,
		com.jili.upload.cnas.mapper,
		com.jili.upload.testStandard.mapper,
		com.jili.experiment.assemble.mapper,
		com.jili.jgschedule.mapper,
		com.jili.upload.yjmalfunction.mapper,
		com.jili.experiment.sensor.mapper,
		com.jili.upload.baoyang.mapper,
		com.jili.upload.check.mapper,
		com.jili.upload.DVP.mapper,
		com.jili.login.mapper,
		com.jili.right.mapper,
		com.jili.basedata.mapper,
		com.jili.fpdata.mapper,
		com.jili.datadictionary.mapper,
		com.jili.t5.mapper,
		com.vw.engine.mapper"></property>
		<!-- 使用sqlSessionFactoryBeanName -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>		
	</bean>
	
  


</beans>